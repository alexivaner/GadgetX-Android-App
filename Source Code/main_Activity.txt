package id.ac.petra.gadgetx;

import android.app.SearchManager;
import android.content.Context;
import android.os.Bundle;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.SearchView;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonArrayRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

import static id.ac.petra.gadgetx.AdapterList.*;

public class MainActivity extends AppCompatActivity implements SwipeRefreshLayout.OnRefreshListener {
    RecyclerView mRecyclerView;
    RecyclerView.Adapter mAdapter;
    SwipeRefreshLayout swipe;
    RecyclerView.LayoutManager mManager;
    RequestQueue mRequest;
    List<ModelList> mListItems;
    Toolbar toolbar;
     SearchView searchView;

    private final String url = "http://192.168.0.4/load_data.php/";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        toolbar = (Toolbar)findViewById(R.id.toolbar);
        mRecyclerView = (RecyclerView) findViewById(R.id.recyclerTemp);
        mRequest = Volley.newRequestQueue(getApplicationContext());
        mListItems = new ArrayList<>();
        setSupportActionBar(toolbar);


        swipe = (SwipeRefreshLayout) findViewById(R.id.swipe_refresh_layout);

        swipe.setOnRefreshListener(this);
        swipe.post(new Runnable() {
                       @Override
                       public void run() {
                           swipe.setRefreshing(true);
                           mListItems.clear();
                           mAdapter.notifyDataSetChanged();
                           request();
                       }
                   }
        );
        mManager = new LinearLayoutManager(this,LinearLayoutManager.VERTICAL,false);
        mRecyclerView.setLayoutManager(mManager);
        mAdapter = new AdapterList(mListItems,MainActivity.this);
        mRecyclerView.setAdapter(mAdapter);




    }



    private void request()
    {
        JsonArrayRequest requestImage = new JsonArrayRequest(Request.Method.POST, url, null,
                new Response.Listener<JSONArray>() {
                    @Override
                    public void onResponse(JSONArray response) {
                        Log.d("JSONResponse",response.toString());
                        for(int i=0; i< response.length(); i++){
                            try {
                                JSONObject data = response.getJSONObject(i);
                                ModelList model = new ModelList();
                                model.setId(data.getString("ID"));
                                model.setName(data.getString("NAME"));
                                model.setStatus(data.getString("STATUS"));
                                model.setNetwork(data.getString("NETWORK"));
                                model.setImg(data.getString("IMAGE"));
                                model.setDim(data.getString("DIMENSION"));
                                model.setDisty(data.getString("DISPLAY_TYPE"));
                                model.setDisz(data.getString("DISPLAY_SIZE"));
                                model.setCpu(data.getString("CPU"));
                                model.setOs(data.getString("OS"));
                                model.setMemory(data.getString("MEMORY"));
                                model.setCamera(data.getString("CAMERA"));
                                model.setBattery(data.getString("BATTERY"));
                                model.setBrand(data.getString("BRAND"));

                                mListItems.add(model);

                            } catch (JSONException e) {
                                e.printStackTrace();
                            }
                            mAdapter.notifyDataSetChanged();
                            swipe.setRefreshing(false);

                        }
                    }
                },
                new Response.ErrorListener() {
                    @Override
                    public void onErrorResponse(VolleyError error) {
                        Log.d("ERRORRequest","Error:"+error.getMessage());
                    }
                });
        mRequest.add(requestImage);
    }

    @Override
    public void onRefresh() {
        mListItems.clear();
        mAdapter.notifyDataSetChanged();
        request();


    }


    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_items, menu);


        return true;
    }

}
